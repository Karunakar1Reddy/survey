name: Update ConfigMap in Platform DevOps Helmcharts repo

on:
  workflow_dispatch:
    inputs:
      config_data:
        description: 'Enter key-value pair to update/add in the below format ONLY eg:{"key1":"value1","key2":"value2"}'
        required: true
        type: string
      appcode:
        description: 'Application Code (e.g: MEBP)'
        required: true
        type: string
      servicename:
        description: 'Service name (e.g., mebp-comp-price-ui)'
        required: true
        type: string
      envname:
        description: 'Environment name (e.g., dev, prod)'
        required: true
        type: string

jobs:
  update-configmap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout esgh-central-workflow-aks repository
        uses: actions/checkout@v2
        with:
          # repository: 'albertsons/esgh-central-workflow-aks'
          repository: 'Karunakar1Reddy/survey'
          token: ${{ secrets.PAT_TOKEN }}
          ref: master

      - name: Checkout platform-devops-helmcharts repository
        uses: actions/checkout@v2
        with:
          # repository: 'albertsons/platform-devops-helmcharts'
          repository: 'Karunakar1Reddy/Test'
          token: ${{ secrets.PAT_TOKEN }}
          path: helm-repo
          ref: main

      - name: Create a new branch
        run: |
          cd helm-repo
          git checkout -b update-configmap-${{ github.run_id }}
          
      - name: Set branch name
        id: set-branch-name
        run: echo "::set-output name=branch_name::update-configmap-${{ github.run_id }}"
        
      - name: Parse JSON input and update configmap.yaml
        run: |
          echo "Parsing input and updating configmap.yaml..."
          CONFIG_DATA='${{ github.event.inputs.config_data }}'
          APPCODE='${{ github.event.inputs.appcode }}'
          SERVICE_NAME='${{ github.event.inputs.servicename }}'
          ENV_NAME='${{ github.event.inputs.envname }}'
          CONFIGMAP_PATH="helm-repo/src/application/$APPCODE/env/$ENV_NAME/$SERVICE_NAME/configmap.yml"
          echo "ConfigMap Path: $CONFIGMAP_PATH"
          echo "Config Data: $CONFIG_DATA"
          
          # Loop through each key-value pair in the JSON data
          echo "$CONFIG_DATA" | jq -r 'to_entries | .[] | "\(.key): \(.value)"' | \
          while IFS=: read -r key value; do
            # Trim leading and trailing whitespace from key and value
            key=$(echo "$key" | xargs)
            value=$(echo "$value" | xargs)
            value=$(echo "$value" | sed 's/[&/\]/\\&/g')
            
            # Check if the key is not empty
            if [ ! -z "$key" ]; then
              # Check if the key exists in the configmap.yaml file
              if grep -q "^$key:" "$CONFIGMAP_PATH"; then
                # Key exists, update its value
                sed -i "s/^$key:.*/$key: \"$value\"/" "$CONFIGMAP_PATH"
              else
                # Key does not exist, add it to the configmap.yaml file
                echo "$key: \"$value\"" >> "$CONFIGMAP_PATH"
              fi
            fi
          done
          
          cat "$CONFIGMAP_PATH"
      - name: Commit and push changes
        run: |
          cd helm-repo
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          APPCODE='${{ github.event.inputs.appcode }}'
          SERVICE_NAME='${{ github.event.inputs.servicename }}'
          ENV_NAME='${{ github.event.inputs.envname }}'
          CONFIGMAP_PATH="src/application/$APPCODE/env/$ENV_NAME/$SERVICE_NAME/configmap.yml"
          git add "${{ github.event.inputs.configmap_path }}"
          git commit -m 'Update configmap.yml with new configuration'
          git push --set-upstream origin update-configmap-${{ github.run_id }}
          
      - name: Create pull request
        id: create-pr
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          cd helm-repo
          PR_URL=$(gh pr create --base main --head ${{ steps.set-branch-name.outputs.branch_name }} --title "This PR updates the configmap file with new configuration" )
          PR_NUMBER=$(echo "$PR_URL" | grep -oP '(?<=/pull/)\d+')
          echo "::set-output name=pr_url::https://github.albertsons.com/albertsons/platform-devops-helmcharts/pull/$PR_NUMBER"
      - name: Post PR link to Teams channel
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          PR_URL=${{ steps.create-pr.outputs.pr_url }}
          curl -H 'Content-Type: application/json' \
               -d "{\"text\": \"@github-reviewers A new PR for helmchart updates has been created: $PR_URL\"}" \
               ${{ secrets.TEAMS_WEBHOOK_URL }}
