name: Central to PDS

on:
  workflow_dispatch:
    inputs:
      config_data:
        description: 'Enter key-value pair in the format {"key1":"value1","key2":"value2"}'
        required: true
        type: string
      configmap_path:
        description: 'Path to configmap'
        required: true
        type: string

jobs:
  update-configmap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout survey repository
        uses: actions/checkout@v2

      - name: Checkout Test repository
        uses: actions/checkout@v2
        with:
          repository: Karunakar1Reddy/Test
          path: test-repo

      - name: Parse JSON input and update configmap.yaml
        run: |
          echo "Parsing input and updating configmap.yaml..."
          CONFIG_DATA='${{ github.event.inputs.config_data }}'
          CONFIGMAP_PATH='${{ github.event.inputs.configmap_path }}'
          echo "CONFIG_DATA: $CONFIG_DATA"
          echo "CONFIGMAP_PATH: $CONFIGMAP_PATH"
          # Loop through each key-value pair in the JSON data
          echo "$CONFIG_DATA" | jq -r 'to_entries | .[] | "\(.key): \(.value)"' | \
          while IFS=: read -r key value; do
            # Trim leading and trailing whitespace from key and value
            key=$(echo "$key" | xargs)
            value=$(echo "$value" | xargs)
            # Check if the key is not empty
            if [ ! -z "$key" ]; then
              # Check if the key exists in the configmap.yaml file
              if grep -q "^$key:" "$CONFIGMAP_PATH"; then
                # Key exists, update its value
                sed -i "s/^$key:.*/$key: \"$value\"/" "$CONFIGMAP_PATH"
              else
                # Key does not exist, add it to the configmap.yaml file
                echo "$key: \"$value\"" >> "$CONFIGMAP_PATH"
              fi
            fi
          done
          
          cat "$CONFIGMAP_PATH"

      - name: Create a new branch and push changes
        run: |
          cd test-repo
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git checkout -b update-configmap
          git add "$CONFIGMAP_PATH"
          git commit -m 'Update configmap.yml with new configuration'
          git push --set-upstream origin update-configmap

      - name: Create a pull request
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: 'Update configmap.yml with new configuration'
          branch: update-configmap
          base: master
          title: 'Update ConfigMap'
          body: 'This PR updates the configmap with new configuration.'

      - name: Post PR link to Teams channel
        run: |
          PR_URL=$(jq -r '.pull_request.html_url' < $GITHUB_EVENT_PATH)
          curl -H 'Content-Type: application/json' \
               -d "{\"text\": \"A new PR has been created: $PR_URL\"}" \
               ${{ secrets.TEAMS_WEBHOOK_URL }}

      - name: Merge PR after approval
        if: github.event.pull_request.merged == true
        run: |
          cd test-repo
          git checkout master
          git pull origin master
          git merge update-configmap
          git push origin master
